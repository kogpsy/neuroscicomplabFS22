alpha = 0.5, bins = 60) +
facet_wrap(~ID) +
coord_cartesian(xlim=c(0, 1.6)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
}
ds |>
filter(ID %in% sample(levels(ID), 9)) |>
plot_hist()
ds |>
filter(ID %in% sample(levels(ID), 9)) |>
plot_hist()
ds |>
filter(ID %in% sample(levels(ID), 9)) |>
plot_hist()
library(tidyverse)
library(viridis)
library(tidyverse)
library(viridis)
ds <- read_csv("data/stroop-data.csv")
glimpse(ds)
d <- read_csv("data/stroop-data.csv")
glimpse(d)
d <- read_csv("data/stroop-data.csv")
glimpse(d)
d_individual_summary <- d |>
group_by(ID, condition) |>
summarize(mean_RT = mean(RT),
error_rate = 1 - mean(correct))
head(d_individual_summary)
d <- read_csv("data/stroop-data.csv")
d <- d |>
mutate(correct = if_else(correct == "Y", 1, 0)) |>
d_individual_summary <- d |>
group_by(ID, condition) |>
summarize(mean_RT = mean(RT),
error_rate = 1 - mean(correct))
d <- d |>
mutate(correct = if_else(correct == "Y", 1, 0)) |>
View(d)
d <- read_csv("data/stroop-data.csv")
glimpse(d)
d <- d |>
mutate(correct = if_else(correct == "Y", 1, 0)) |>
View(d)
d
d <- read_csv("data/stroop-data.csv")
glimpse(d)
d
d <- d |>
mutate(correct = if_else(correct == "Y", 1, 0))
d_individual_summary <- d |>
group_by(ID, condition) |>
summarize(mean_RT = mean(RT),
error_rate = 1 - mean(correct))
head(d_individual_summary)
d_individual_summary |>
ggplot(aes(x = mean_RT, y = error_rate)) +
geom_point()
d_individual_summary |>
ggplot(aes(x = mean_RT, y = error_rate)) +
geom_point() +
facet_wrap(~condition)
d <- read_csv("data/stroop-data.csv")
glimpse(d)
d <- d |>
mutate(correct = if_else(correct == "Y", 1, 0))
d_individual_summary <- d |>
group_by(ID, condition) |>
summarize(mean_RT = mean(RT),
error_rate = 1 - mean(correct))
head(d_individual_summary)
d <- d |>
mutate(across(where(is.character), ~as_factor(.)))
d_individual_summary <- d |>
group_by(ID, condition) |>
summarize(mean_RT = mean(RT),
error_rate = 1 - mean(correct))
head(d_individual_summary)
d_individual_summary |>
ggplot(aes(x = mean_RT, y = error_rate)) +
geom_point() +
facet_wrap(~condition)
d_individual_summary <- d_individual_summary |>
mutate(outlier = case_when(mean_RT < 0.35 ~ TRUE,
mean_RT > 0.9 ~ TRUE,
error_rate > 0.3 ~ TRUE,
TRUE ~ FALSE))
d_individual_summary |>
ggplot(aes(x = mean_RT, y = error_rate)) +
geom_point() +
geom_point(data = filter(d_individual_summary, outlier == TRUE),
color = "firebrick", shape = "square", size = 5)
d_individual_summary |>
ggplot(aes(x = mean_RT, y = error_rate)) +
geom_point() +
geom_point(data = filter(d_individual_summary,
outlier == TRUE),
color = "firebrick", shape = "square", size = 5) +
facet_wrap(~condition)
d_individual_summary |>
ggplot(aes(x = mean_RT, y = error_rate)) +
geom_point() +
geom_point(data = filter(d_individual_summary,
outlier == TRUE),
color = "firebrick", shape = "square", size = 3) +
facet_wrap(~condition)
d_individual_summary <- d |>
group_by(ID, condition) |>
summarize(mean_RT = median(RT),
error_rate = 1 - mean(correct))
head(d_individual_summary)
d_individual_summary |>
ggplot(aes(x = mean_RT, y = error_rate)) +
geom_point() +
facet_wrap(~condition)
d_individual_summary <- d |>
group_by(ID, condition) |>
summarize(RT = median(RT),
error_rate = 1 - mean(correct))
head(d_individual_summary)
d_individual_summary |>
ggplot(aes(x = RT, y = error_rate)) +
geom_point() +
facet_wrap(~condition)
d <- d |>
filter(correct == 1)
plot_hist <- function(d) {
d |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_wrap(~ID) +
coord_cartesian(xlim=c(0, 1.6)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
}
d |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_wrap(~ID) +
coord_cartesian(xlim=c(0, 1.5)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
d |>
filter(ID %in% sample(levels(ID), 9)) |>
plot_hist()
plot_hist <- function(d) {
d |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_wrap(~ID) +
coord_cartesian(xlim=c(0, 1.5)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
}
d |>
filter(ID %in% sample(levels(ID), 9)) |>
plot_hist()
d |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_grid(condition~ID) +
coord_cartesian(xlim=c(0, 1.5)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
plot_hist <- function(d) {
d |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_grid(condition~ID) +
coord_cartesian(xlim=c(0, 1.5)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
}
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
plot_hist <- function(d) {
d |>
mutate(condition = fct_relevel("congruent")) |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_grid(condition~ID) +
coord_cartesian(xlim=c(0, 1.5)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
}
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
plot_hist <- function(d) {
d |>
mutate(condition = fct_relevel(condition, "congruent")) |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_grid(condition~ID) +
coord_cartesian(xlim=c(0, 1.5)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
}
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
plot_hist <- function(d) {
d |>
mutate(condition = fct_relevel(condition, "congruent")) |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_grid(condition~ID) +
coord_cartesian(xlim=c(0, 1.5)) +
scale_fill_viridis(discrete = TRUE, option = "C") +
scale_color_viridis(discrete = TRUE, option = "C")
}
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
plot_hist <- function(d) {
d |>
mutate(condition = fct_relevel(condition, "congruent")) |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_grid(condition~ID) +
coord_cartesian(xlim=c(0, 1.5)) +
scale_fill_viridis(discrete = TRUE, option = "B") +
scale_color_viridis(discrete = TRUE, option = "B")
}
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
plot_hist <- function(d) {
d |>
mutate(condition = fct_relevel(condition, "congruent")) |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_grid(condition~ID) +
coord_cartesian(xlim=c(0, 1.5)) +
scale_fill_viridis(discrete = TRUE, option = "E", end = 0.8) +
scale_color_viridis(discrete = TRUE, option = "E")
}
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
plot_hist <- function(d) {
d |>
mutate(condition = fct_relevel(condition, "congruent")) |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
facet_grid(condition~ID) +
coord_cartesian(xlim=c(0, 1.8)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
}
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
plot_hist <- function(d) {
d |>
mutate(condition = fct_relevel(condition, "congruent")) |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 60) +
# facet_grid(condition~ID) +
facet_wrap(~ID) +
coord_cartesian(xlim=c(0, 1.8)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
}
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
plot_hist <- function(d) {
d |>
mutate(condition = fct_relevel(condition, "congruent")) |>
ggplot(aes(x = RT,
fill = condition,
color = condition,)) +
geom_histogram(aes(y = ..density..),
alpha = 0.5, bins = 30) +
# facet_grid(condition~ID) +
facet_wrap(~ID) +
coord_cartesian(xlim=c(0, 1.8)) +
scale_fill_viridis(discrete = TRUE, option = "E") +
scale_color_viridis(discrete = TRUE, option = "E")
}
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
levels(d$ID)
levels(d$ID) |> count()
levels(d$ID)
length(levels(d$ID))
d |>
filter(ID %in% sample(levels(ID), 4)) |>
plot_hist()
by_subject <- d |>
group_by(ID, condition) |>
summarise(mean = median(RT))
agg <- Rmisc::summarySEwithin(by_subject,
measurevar = "mean",
withinvars = "condition",
idvar = "ID",
na.rm = FALSE,
conf.interval = .95)
agg |>
ggplot(aes(condition, mean, fill = condition)) +
geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se),
width = 0.1, size=1, color="black") +
scale_fill_viridis(discrete=TRUE, option="cividis") +
theme(legend.position = "none")
mutate(condition = fct_relevel(condition, "congruent"))
d <- read_csv("data/stroop-data.csv")
glimpse(d)
d <- d |>
mutate(across(where(is.character), ~as_factor(.)),
mutate(condition = fct_relevel(condition, "congruent"))
d <- read_csv("data/stroop-data.csv")
glimpse(d)
d <- d |>
mutate(across(where(is.character), ~as_factor(.)),
condition = fct_relevel(condition, "congruent"))
d <- d |>
mutate(correct = if_else(correct == "Y", 1, 0))
by_subject <- d |>
group_by(ID, condition) |>
summarise(mean = median(RT))
agg <- Rmisc::summarySEwithin(by_subject,
measurevar = "mean",
withinvars = "condition",
idvar = "ID",
na.rm = FALSE,
conf.interval = .95)
agg |>
ggplot(aes(condition, mean, fill = condition)) +
geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se),
width = 0.1, size=1, color="black") +
scale_fill_viridis(discrete=TRUE, option="cividis") +
theme(legend.position = "none")
by_subject <- d |>
group_by(ID, condition) |>
summarise(mean = mean(RT))
agg <- Rmisc::summarySEwithin(by_subject,
measurevar = "mean",
withinvars = "condition",
idvar = "ID",
na.rm = FALSE,
conf.interval = .95)
agg |>
ggplot(aes(condition, mean, fill = condition)) +
geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se),
width = 0.1, size=1, color="black") +
scale_fill_viridis(discrete=TRUE, option="cividis") +
theme(legend.position = "none")
agg |>
ggplot(aes(condition, mean, fill = condition)) +
# geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se),
width = 0.1, size=1, color="black") +
scale_fill_viridis(discrete=TRUE, option="cividis") +
theme(legend.position = "none")
agg |>
ggplot(aes(condition, mean, fill = condition)) +
# geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se),
width = 0.1, size=1, color="black") +
geom_point() +
scale_fill_viridis(discrete=TRUE, option="cividis") +
theme(legend.position = "none")
agg |>
ggplot(aes(condition, mean, fill = condition)) +
# geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se),
width = 0.1, size=1, color="black") +
geom_point(size = 4) +
scale_fill_viridis(discrete=TRUE, option="cividis") +
theme(legend.position = "none")
by_subject <- d |>
group_by(ID, condition) |>
summarise(RT = mean(RT))
agg <- Rmisc::summarySEwithin(by_subject,
measurevar = "RT",
withinvars = "condition",
idvar = "ID",
na.rm = FALSE,
conf.interval = .95)
agg |>
ggplot(aes(condition, RT)) +
# geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se),
width = 0.1, size=1, color="black") +
geom_point(size = 4) +
scale_fill_viridis(discrete=TRUE, option="cividis") +
theme(legend.position = "none")
agg |>
ggplot(aes(condition, RT)) +
# geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = RT-se, ymax = RT+se),
width = 0.1, size=1, color="black") +
geom_point(size = 4) +
scale_fill_viridis(discrete=TRUE, option="cividis") +
theme(legend.position = "none")
agg |>
ggplot(aes(condition, RT)) +
# geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = RT-se, ymax = RT+se),
width = 0.1, size=1, color="black") +
geom_point(size = 4) +
scale_fill_viridis(discrete=TRUE, option="cividis") +
theme(legend.position = "none")
agg |>
ggplot(aes(condition, RT)) +
# geom_col(alpha = 0.8) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = RT-se, ymax = RT+se),
width = 0.1, size=1, color="black") +
geom_point(size = 4) +
theme(legend.position = "none")
agg |>
ggplot(aes(condition, RT)) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = RT-se, ymax = RT+se),
width = 0.1, size=1, color="black") +
geom_point(size = 4) +
theme(legend.position = "none")
agg |>
ggplot(aes(condition, RT)) +
geom_line(aes(group = 1), linetype = 3) +
geom_errorbar(aes(ymin = RT-se, ymax = RT+se),
width = 0.1, size=1, color="black") +
geom_point(size = 4) +
theme(legend.position = "none")
dd <- d |>
filter(!(condition %in% "neutral"))
dd <- d |>
filter(!(condition %in% "neutral")) |>
mutate(condition = fct_drop(condition))
out <- dd |>
rogme::hsf(RT ~ condition + ID)
rogme::plot_hsf(out)
out <- dd |>
rogme::hsf(RT ~ condition + ID)
rogme::plot_hsf(out)
View(dd)
d <- d |>
filter(correct == 1)
dd <- d |>
filter(!(condition %in% "neutral")) |>
mutate(condition = fct_drop(condition))
out <- dd |>
rogme::hsf(RT ~ condition + ID)
rogme::plot_hsf(out)
out
out$individual_sf
apply(out$individual_sf, 1, \(x) x>0)
rogme::plot_hsf(out)
install.packages(c("htmltools", "rmarkdown", "knitr", "distill"))
install.packages("gganimate")
install.packages(c("xaringan", "xaringanExtra"))
install.packages("xaringanthemer")
# install.packages("devtools")
devtools::install_github("gadenbuie/xaringanExtra")
install.packages("remotes")
install.packages("postcards")
