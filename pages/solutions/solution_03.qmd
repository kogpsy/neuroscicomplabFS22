---
title: "Übung 3: Lösung"
description: | 
    Daten importieren und bereinigen.
date: "04-03-2022"
author:
  - name: Andrew Ellis
    url: https://github.com/awellis
    affiliation: Kognitive Psychologie, Wahrnehmung und Methodenlehre, Universität Bern 
    affiliation-url: https://www.kog.psy.unibe.ch
    orcid: 0000-0002-2788-936X
license: CC BY
citation: true
bibliography: ../../bibliography.bib
format:
    html:
        toc: true
        code-link: true
---

```{r}
#| include: false

# Set working directory of R
knitr::opts_knit$set(root.dir = '../../data/exercise_03')
```

# Aufgabenstellung

In dieser Aufgabe bearbeiten Sie Daten aus einem Detektionssexperiment. Versuchspersonen mussten in zwei Bedingungen (`bias` und `no_bias`) ein Signal, welches in Rauschen eingebettet war, detektieren. Im Datensatz sind folgende Variablen:

```
subject: Subjekt ID
trial_num: Trialnummer, durchnummeriert in jeder Bedingung
condition: Bedingung (_Bias_ und _No Bias_)
signal_present: Indikatorvariable für Signal (0: absent, 1: present)
correct: Indikatorvariable für korrekte Antwort (0: incorrekt, 1: correct)
rt: Reaktionszeit in Sekunden

```

## Aufgaben 

:::exercise
**Aufgabe 1**

a) Speichern Sie das *CSV* File in Ihren Projektordner.

b) Lesen Sie das *CSV* File ein. Per Konvention verwenden wir den Variablennamen `d` für den Datensatz.

c) Überprüfen Sie, ob alle Variablen vorhanden sind. Verwenden Sie z.B. die Funktion `glimpse()`.

d) Konvertieren Sie die Gruppierungsvariablen `subject` und `condition` zu Faktoren.
:::

```{r}
#| message: false
#| warning: false

library(tidyverse)
```

```{r}
#| message: false
#| warning: false

d <- read_csv("data/data-exercise-03.csv")
```

Schauen Sie sich die Variablen an:

```{r}
glimpse(d)
```

Konvertieren Sie die Gruppierungsvariablen zu Faktoren:

```{r}
d <- d |>
    mutate(subject = as_factor(subject),
           condition = as_factor(condition))
```

:::exercise
**Aufgabe 2**

Gibt es Versuchspersonen die in einer der Bedingungen Reaktionszeiten hat, welche mehr als zwei Standardabweichungen **über** dem Bedingungsmittelwert liegen?
:::

```{r}
#| message: false
#| warning: false

# summary stats (means) for subjects/conditions
sum_stats_participants <- d |>
    group_by(subject, condition) |>
    dplyr::summarise(
        mean_P = mean(rt))

```

```{r}
# summary stats (means and SDs) for conditions
sum_stats_conditions <- d |>
    group_by(condition) |>
    dplyr::summarise(
        mean_C = mean(rt),
        sd_C = sd(rt))
```

```{r}
sum_stats_participants <-
    full_join(
        sum_stats_participants,
        sum_stats_conditions,
        by = "condition") |>
    mutate(outlier_P = (mean_P - mean_C) > 2 * sd_C)
```

```{r}
# show outlier participants
sum_stats_participants |>
    filter(outlier_P == 1) |>
    show()
```

Es gibt keine Versuchsperson, deren mittlere Reaktionszeit in einer Bedingung mehr als zwei Standardabweichungen **über** dem Bedingungsmittelwert liegt. Dies bedeutet, dass sich in `excluded` keine Personen befinden, und der Dataframe folglich $0$ Zeilen hat.

```{r}
excluded <- sum_stats_participants |>
    filter(outlier_P == 1)

excluded
```

Der nächste Schritt wäre also nicht unbedingt notwendig.

```{r}
d_cleaned <- d |>
    filter(!(subject %in% excluded$subject)) |>
    mutate(subject = fct_drop(subject))
```

:::exercise
**Aufgabe 3**

a) Gibt es einzelne Trials, in denen Versuchpersonen länger als 4 Standardabweichungen über dem  Bedingungsmittelwert gebraucht haben, um zu Antworten?

b) Gibt es einzelne Trials, in denen Versuchpersonen zu schnell (unter 100 ms) geantwortet haben?

c) Speichern Sie den bearbeiteten Datensatz als _CSV_ File.
:::

__Zu Aufgabe 3.a)__

Wir wollen Trials identifizieren, bei denen Vpn länger gebraucht haben, als 4 Standardabweichungen über dem  Bedingungsmittelwert. Das bedeutet `(rt - mean_C) > 4 * sd_C`, und nicht `abs(rt - mean_C) > 4 * sd_C`. Letzteres würde auch Trials als Ausreisser identifizieren, welche 4 Standardabweichungen unter dem  Bedingungsmittelwert liegen.

__Zu Aufgabe 3.b)__

Die Reaktionszeiten sind hier in Sekunden, nicht Millisekunden. Dies bedeutet, wir brauchen `rt < 0.100`, und nicht `rt < 100`.

```{r}
d_cleaned <- d_cleaned |>
    full_join(
        sum_stats_conditions,
        by = "condition") |>
    mutate(
        trial_type = case_when(
            (rt - mean_C) > 4 * sd_C ~ "too slow",
            rt < 0.100 ~ "too fast",
            TRUE ~ "OK") |>
            factor(levels = c("OK", "too fast", "too slow")))

```

```{r}
d_cleaned |>
    ggplot(aes(x = trial_num, y = rt, color = trial_type, shape = trial_type)) +
    geom_point(alpha = 0.6) +
    facet_grid(~condition) +
    scale_color_manual(values = c("gray70", "red", "steelblue"))
```

```{r}
d_cleaned |>
    filter(trial_type != "OK")
```
Vor dem Entfernen der Ausreisser Trials haben wir 5756 Datenpunkte.

```{r}
nrow(d_cleaned)
```

```{r}
d_cleaned <- d_cleaned |>
    filter(trial_type == "OK") |>
    select(subject, trial_num, condition, signal_present, correct, rt)
```

Nach dem Entfernen haben wir noch 5591.

```{r}
nrow(d_cleaned)
```

```{r}
d_cleaned |>
    ggplot(aes(x = trial_num, y = rt)) +
    geom_point(alpha = 0.6) +
    facet_grid(~condition) +
    scale_color_manual(values = c("gray70", "red", "steelblue"))
```

```{r}
#| eval: false

d_cleaned |> write_csv("data/data-cleaned.csv")
```